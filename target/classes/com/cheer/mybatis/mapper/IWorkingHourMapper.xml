<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cheer.mybatis.mapper.IWorkingHourMapper">
  <resultMap id="BaseResultMap" type="com.cheer.mybatis.model.IWorkingHour">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="working_date" jdbcType="DATE" property="workingDate" />
    <result column="duration" jdbcType="INTEGER" property="duration" />
    <result column="created_by" jdbcType="VARCHAR" property="createdBy" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="update_by" jdbcType="VARCHAR" property="updateBy" />
    <result column="version" jdbcType="INTEGER" property="version" />
    <result column="empno" jdbcType="CHAR" property="empno" />
    <result column="created_time" jdbcType="TIMESTAMP" property="createdTime" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from i_working_hour
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.cheer.mybatis.model.IWorkingHour" useGeneratedKeys="true"
   keyProperty="id">
    insert into i_working_hour (working_date, duration, 
      created_by, empno, created_time
      )
    values (#{workingDate,jdbcType=DATE}, #{duration,jdbcType=INTEGER}, 
      #{createdBy,jdbcType=VARCHAR}, #{empno,jdbcType=CHAR}, now()
      )
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.cheer.mybatis.model.IWorkingHour">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update i_working_hour
    set working_date = #{workingDate,jdbcType=DATE},
      duration = #{duration,jdbcType=INTEGER},
      created_by = #{createdBy,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      update_by = #{updateBy,jdbcType=VARCHAR},
      version = #{version,jdbcType=INTEGER},
      empno = #{empno,jdbcType=CHAR},
      created_time = #{createdTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select id, working_date, duration, created_by, update_time, update_by, version, empno, 
    created_time
    from i_working_hour
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select id, working_date, duration, created_by, update_time, update_by, version, empno, 
    created_time
    from i_working_hour
  </select>
  
  <select id="querySumDurationByEmpno" resultType="java.math.BigDecimal">
  	select sum(duration) sum from i_working_hour where empno=#{empno} and working_date>=#{startDate}
  </select>
  
  <select id="queryWorkingHourToday" resultMap="BaseResultMap">
  	 select id, working_date, duration, created_by, update_time, update_by, version, empno, 
    created_time
    from i_working_hour
    where empno = #{empno} and working_date = #{workingDateAsStr}
  </select>
  
  <update id="updateIWorkingHourByEmpno">
  	update i_working_hour
    set working_date = #{workingDate,jdbcType=DATE},
      duration = #{duration,jdbcType=INTEGER},
      update_time = now(),
      update_by = #{updateBy,jdbcType=VARCHAR},
      version = version+1,
    where empno = #{empno}
  </update>
  
  <cache eviction="LRU" size="1024">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
  </cache>
</mapper>